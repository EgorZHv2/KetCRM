@page "/register"
@using KetCRM.BlazorClient.Models
@using KetCRM.BlazorClient.Services.Account
@using KetCRM.BlazorClient.Enums
@inject IAccountService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">Имя</label>
                <InputText Id="name" class="form-control" @bind-Value="RegisterModel.Name" />
                <ValidationMessage For="@(() => RegisterModel.Name)" />
            </div>

            <div class="form-group">
                <label for="surname">Фамилия</label>
                <InputText Id="surname" class="form-control" @bind-Value="RegisterModel.Surname" />
                <ValidationMessage For="@(() => RegisterModel.Surname)" />
            </div>

            <div class="form-group">
                <label for="patronymic">Отчество</label>
                <InputText Id="patronymic" class="form-control" @bind-Value="RegisterModel.Patronymic" />
                <ValidationMessage For="@(() => RegisterModel.Patronymic)" />
            </div>

            <div class="form-group">
                <label for="login">Логин</label>
                <InputText Id="login" class="form-control" @bind-Value="RegisterModel.Login" />
                <ValidationMessage For="@(() => RegisterModel.Login)" />
            </div>

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" />
            </div>
            <div class="form-group">
                <label for="password">Confirm Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
            </div>
            <div class="form-group">
                <label for="password">Confirm Password</label>
                <select @bind="RegisterModel.Role" class="selectpicker" data-live-search="true">
                    <option selected value="@Roles.Basic" data-tokens="ketchup mustard">Староста</option>
                    <option value="@Roles.Moderator">Кл.руководитель</option>
                    <option value="@Roles.Admin">Секретарь</option>
                    <option value="@Roles.SuperAdmin">Админ</option>
                </select>

            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private RegisterModel RegisterModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(RegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }

}